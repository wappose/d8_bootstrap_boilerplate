<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/*
function boilerplate_editor_js_settings_alter(array &$settings) {
  if (isset($settings['editor']['formats']['full_html'])) {
    $settings['editor']['formats']['full_html']['editorSettings']['protectedSource'][] =  "/<i class[\s\S]*?\>/g";
    $settings['editor']['formats']['full_html']['editorSettings']['protectedSource'][] =  "/<\/i>/g";
  }
}
*/

function boilerplate_page_attachments_alter(array &$page) {
	$theme_http_path_base = "/themes/radiohjalpen";

    $page['#attached']['html_head'][] = [[
      '#type' => 'html_tag',
      '#tag' => 'link',
      '#attributes' => array(
        'rel' => 'apple-touch-icon',
        'sizes' => '180x180',
        'href' => $theme_http_path_base.'/assets/icons/apple-touch-icon.png?v=XBrNQ4KlpR',
      ),
    ], 'apple-touch-icon'];    

    $page['#attached']['html_head'][] = [[
      '#type' => 'html_tag',
      '#tag' => 'link',
      '#attributes' => array(
        'rel' => 'icon',
        'type' => 'image/png',
        'href' => $theme_http_path_base.'/assets/icons/favicon-32x32.png?v=XBrNQ4KlpR',
        'sizes' => '32x32',
      ),
    ], 'icon32x32'];

    $page['#attached']['html_head'][] = [[
      '#type' => 'html_tag',
      '#tag' => 'link',
      '#attributes' => array(
        'rel' => 'icon',
        'type' => 'image/png',
        'href' => $theme_http_path_base.'/assets/icons/favicon-16x16.png?v=XBrNQ4KlpR',
        'sizes' => '16x16',
      ),
    ], 'icon16x16'];

    $page['#attached']['html_head'][] = [[
      '#type' => 'html_tag',
      '#tag' => 'link',
      '#attributes' => array(
        'rel' => 'manifest',
        'href' => $theme_http_path_base.'/assets/icons/manifest.json?v=XBrNQ4KlpR',
      ),
    ], 'manifest'];

    $page['#attached']['html_head'][] = [[
      '#type' => 'html_tag',
      '#tag' => 'link',
      '#attributes' => array(
        'rel' => 'mask-icon',
        'href' => $theme_http_path_base.'/assets/icons/safari-pinned-tab.svg?v=XBrNQ4KlpR',
        'color' => '#5bbad5',
      ),
    ], 'mask-icon'];

    $page['#attached']['html_head'][] = [[
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'apple-mobile-web-app-title',
        'content' => 'Boilerplate',
      ),
    ], 'apple-mobile-web-app-title'];

    $page['#attached']['html_head'][] = [[
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'application-name',
        'content' => 'Boilerplate',
      ),
    ], 'application-name'];

    $page['#attached']['html_head'][] = [[
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'msapplication-config',
        'content' => $theme_http_path_base.'/assets/icons/browserconfig.xml?v=XBrNQ4KlpR',
      ),
    ], 'msapplication-config'];

    $page['#attached']['html_head'][] = [[
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'theme-color',
        'content' => '#ffffff',
      ),
    ], 'theme-color'];

  }

/**
* Implements hook_preprocess_menu() for menu.html.twig.
*/
function boilerplate_preprocess_menu(&$variables, $hook) {
  if ($hook == 'menu') {
    $current_path = \Drupal::request()->getRequestUri();
    foreach ($variables['items'] as &$item) {
      if ($item['in_active_trail']) {        
        if ($item['url']->toString() == $current_path) {
          $item['is_active'] = TRUE;
        } elseif (count($item['below'])) { 
          _boilerplate_menu_process_submenu($item['below'], $current_path);
        } 
      }
    }
  }
}

/**
 * Set active and active-trail class for sub-menus recursively.
 */
function _boilerplate_menu_process_submenu(&$submenu, $current_path) {
  foreach ($submenu as &$item) {
    if ($item['in_active_trail']) {
      if ($item['url']->toString() == $current_path) {
        $item['is_active'] = TRUE;
      } elseif (count($item['below'])) { 
        _boilerplate_menu_process_submenu($item['below'], $current_path);
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function boilerplate_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__'.$content_type;
  }
}

